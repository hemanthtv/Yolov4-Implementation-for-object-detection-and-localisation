	''''Object detection and localisation using y0lov4''''
1.create new folder name it yolov4 tiny
2.Open Anaconda and open virtual environment cmd shell
	and change the directory to the above new named file 
3.install Pre requirements:- pip install -r requirements.txt
  	opencv-python==4.1.1.26
  	lxml
	tqdm
	tensorflow==2.3.0rc0
	absl-py
	easydict
	matplotlib
	pillow
4.install pre-trained yolo weights (either yolov4 or y0lov4 tiny) 
	and aft installing copy that file and paste it in data folder of  yolov4 tiny
5. Convert darknet weights to tensorflow
## yolov4
python save_model.py --weights ./data/yolov4.weights --output ./checkpoints/yolov4-416 --input_size 416 --model yolov4 

# yolov4-tiny
python save_model.py --weights ./data/yolov4-tiny.weights --output ./checkpoints/yolov4-tiny-416 --input_size 416 --model yolov4 --tiny

# custom yolov4
python save_model.py --weights ./data/custom.weights --output ./checkpoints/custom-416 --input_size 416 --model yolov4 






# Run yolov4 tensorflow model
python detect.py --weights ./checkpoints/yolov4-416 --size 416 --model yolov4 --images ./data/images/kite.jpg                                         

 we can run for multiple images with comma "," (, ./data/images/kite.jpg)seperated folderes or we can either approach os.path.join() by activating python in anakonda cmd shell
 
and after running this command it automatically saves the predictions (output images ) in detection folder

# Run yolov4-tiny tensorflow model
python detect.py --weights ./checkpoints/yolov4-tiny-416 --size 416 --model yolov4 --images ./data/images/kite.jpg --tiny

# Run custom yolov4 tensorflow model
python detect.py --weights ./checkpoints/custom-416 --size 416 --model yolov4 --images ./data/images/car.jpg





# Run yolov4 on video
python detect_video.py --weights ./checkpoints/yolov4-416 --size 416 --model yolov4 --video ./data/video/video.mp4 --output ./detections/results.avi

# Run custom yolov4 model on video
python detect_video.py --weights ./checkpoints/custom-416 --size 416 --model yolov4 --video ./data/video/cars.mp4 --output ./detections/results.avi

# Run yolov4 on webcam
python detect_video.py --weights ./checkpoints/yolov4-416 --size 416 --model yolov4 --video 0 --output ./detections/results.avi